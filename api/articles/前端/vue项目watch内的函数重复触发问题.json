{"title":"vue项目watch内的函数重复触发问题","slug":"前端/vue项目watch内的函数重复触发问题","date":"2020-02-20T06:30:00.000Z","updated":"2020-11-23T14:37:57.000Z","comments":true,"path":"api/articles/前端/vue项目watch内的函数重复触发问题.json","excerpt":null,"covers":null,"content":"<h4 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h4><p>有两个页面A和B，每个页面里都有一个<code>getList()</code>方法。这个两个方法都需要传一个相同的参数C，参数C的选择过程又比较麻烦。为了避免在切换A、B两个界面重复选择参数C的问题，我将参数C存入vuex中，然后在两个页面里都使用watch监听参数C来执行<code>getList()</code>方法。然后发现一个问题，从A页面进入B页面后，在B页面重新选择参数C，A页面的<code>getList()</code>方法竟然也会被执行，反之亦然，从B页面到A页面后，在A页面改变参数C也会执行B页面的<code>getList()</code>方法。</p>\n<p>后来发现是使用了因为使用了keep-alive所致，keep-alive会将Vue实例始终保持在内存中，因此该Vue实例始终存续，相应的watchers始终生效，查找相关资料后，发现许多人也遇到了这个问题，最后找到以下两种解决方案：</p>\n<h4 id=\"解决方法1\"><a href=\"#解决方法1\" class=\"headerlink\" title=\"解决方法1\"></a>解决方法1</h4><p>通过router路径来判断是否执行<code>getList()</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">someValue</span>(<span class=\"params\">newValue, oldValue</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$route.fullPath === <span class=\"string\">&#x27;A页面路由路径&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// do something</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"解决方法2\"><a href=\"#解决方法2\" class=\"headerlink\" title=\"解决方法2\"></a>解决方法2</h4><p>添加一个flag参数来判断页面是否是active状态，使用keep-alive缓存的组件只会触发<code>activated</code>和<code>deactivated</code>事件，所以就在这两个事件触发时把flag置为true和false，只有在flag为true的时候才执行<code>getList()</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      activatedFlag: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;someValue&#x27;</span>(val) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(val &amp;&amp; <span class=\"built_in\">this</span>.activatedFlag) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getlist();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  activated () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.activatedFlag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  deactivated () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.activatedFlag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果页面比较多，而且各页面里的函数名称不一致的话，可以把上面代码的watch部分去掉写成一个mixin，在需要的页面引入即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> activeFlag <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/mixin/activeFlag&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  mixins: [activeFlag],</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;someValue&#x27;</span>(val) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(val &amp;&amp; <span class=\"built_in\">this</span>.activatedFlag) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getlistA();</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getlistB();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","more":"<h4 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h4><p>有两个页面A和B，每个页面里都有一个<code>getList()</code>方法。这个两个方法都需要传一个相同的参数C，参数C的选择过程又比较麻烦。为了避免在切换A、B两个界面重复选择参数C的问题，我将参数C存入vuex中，然后在两个页面里都使用watch监听参数C来执行<code>getList()</code>方法。然后发现一个问题，从A页面进入B页面后，在B页面重新选择参数C，A页面的<code>getList()</code>方法竟然也会被执行，反之亦然，从B页面到A页面后，在A页面改变参数C也会执行B页面的<code>getList()</code>方法。</p>\n<p>后来发现是使用了因为使用了keep-alive所致，keep-alive会将Vue实例始终保持在内存中，因此该Vue实例始终存续，相应的watchers始终生效，查找相关资料后，发现许多人也遇到了这个问题，最后找到以下两种解决方案：</p>\n<h4 id=\"解决方法1\"><a href=\"#解决方法1\" class=\"headerlink\" title=\"解决方法1\"></a>解决方法1</h4><p>通过router路径来判断是否执行<code>getList()</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">someValue</span>(<span class=\"params\">newValue, oldValue</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$route.fullPath === <span class=\"string\">&#x27;A页面路由路径&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// do something</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"解决方法2\"><a href=\"#解决方法2\" class=\"headerlink\" title=\"解决方法2\"></a>解决方法2</h4><p>添加一个flag参数来判断页面是否是active状态，使用keep-alive缓存的组件只会触发<code>activated</code>和<code>deactivated</code>事件，所以就在这两个事件触发时把flag置为true和false，只有在flag为true的时候才执行<code>getList()</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      activatedFlag: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;someValue&#x27;</span>(val) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(val &amp;&amp; <span class=\"built_in\">this</span>.activatedFlag) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getlist();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  activated () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.activatedFlag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  deactivated () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.activatedFlag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果页面比较多，而且各页面里的函数名称不一致的话，可以把上面代码的watch部分去掉写成一个mixin，在需要的页面引入即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> activeFlag <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/mixin/activeFlag&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  mixins: [activeFlag],</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;someValue&#x27;</span>(val) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(val &amp;&amp; <span class=\"built_in\">this</span>.activatedFlag) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getlistA();</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getlistB();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"技术分享","path":"api/categories/技术分享.json"}],"tags":[{"name":"vue","path":"api/tags/vue.json"},{"name":"bug","path":"api/tags/bug.json"}]}