{"title":"sync-player：使用websocket实现异地同步看视频","slug":"前端/sync-player","date":"2020-09-20T07:00:00.000Z","updated":"2020-11-23T14:37:57.000Z","comments":true,"path":"api/articles/前端/sync-player.json","excerpt":null,"covers":["https://s1.ax1x.com/2020/09/19/wI60je.gif","https://s1.ax1x.com/2020/09/20/wofbYd.gif","https://s1.ax1x.com/2020/09/17/wfntdU.png","https://s1.ax1x.com/2020/09/17/wfnYZT.png"],"content":"<p>前段时间我有这样一个需求，想和一个异地的人一起看电影，先后在网上找了一些方案，不过那几个方案都有一些缺点</p>\n<ul>\n<li><p><strong>coplay</strong> 一个浏览器插件，只能播放各大视频网站的视频，视频资源有限，我想要看的视频没有，比如一些经典电影和美剧之类</p>\n</li>\n<li><p><strong>微光APP</strong> 还是上面的问题，而且只有手机端</p>\n</li>\n<li><p><strong>向日葵等远程桌面</strong> 受限于网络问题，卡顿很严重，体验不好</p>\n</li>\n</ul>\n<p>除了这几个方案之外我也尝试了直播的方案：</p>\n<ul>\n<li><p><strong>通过B站等直播平台进行直播，</strong> 缺点：有几十秒的延迟，而且不能保证两端播放进度同步，总会差个几秒，而且直播对上传带宽要求较高。</p>\n</li>\n<li><p><strong>自建直播平台，</strong>，我首先使用了腾讯云上的<code>云直播</code>解决方案，后来我又在自己的云服务器上使用<code>nginx+rtmp</code>搭建了直播服务，两个方案延迟差不多，大概在5-10秒，但还是无法解决两端视频不同步问题。</p>\n</li>\n</ul>\n<p>作为一个切图仔，对用户体验还是有一定追求的，我是一个下载党，看电影必须下载到本地看，基本不看视频网站上的玩意</p>\n<p>那么有没有能实现同步播放本地文件的方案呢，答案是肯定的，经过我的一些摸索和研究，我实现了本地文件的同步播放，同时支持PC和手机端，而且还支持外挂字幕等高级功能，如何实现请往下看。</p>\n<h1 id=\"功能介绍-amp-特性：\"><a href=\"#功能介绍-amp-特性：\" class=\"headerlink\" title=\"功能介绍&amp;特性：\"></a>功能介绍&amp;特性：</h1><p>一个可以同步看视频的播放器，可用于异地同步观影、观剧，支持多人同时观看。<br>本项目有两个版本，web版运行在浏览器上，可跨平台，不限操作系统、设备，功能简单适用于要求不高的用户。还有基于SPlayer(射手影音)DIY的客户端版本(windows、MAC)，播放4K高清文件、外挂字幕，统统没问题。</p>\n<h1 id=\"演示demo\"><a href=\"#演示demo\" class=\"headerlink\" title=\"演示demo:\"></a>演示demo:</h1><p>web版同步效果</p>\n<p><img  src=\"https://s1.ax1x.com/2020/09/19/wI60je.gif\"  ><span class=\"image-caption\">wI60je.gif</span></p>\n<p>客户端与web版同步效果</p>\n<p><img  src=\"https://s1.ax1x.com/2020/09/20/wofbYd.gif\"  ><span class=\"image-caption\">wofbYd.gif</span></p>\n<h1 id=\"原理：\"><a href=\"#原理：\" class=\"headerlink\" title=\"原理：\"></a>原理：</h1><p>基于websocket实现，与一些用websocket实现的聊天室类似，只不过这个聊天室里的消息换成了播放暂停的动作和时间信息，客户端收到消息后执行相应的动作:播放、暂停、快进，以达到同时播放的效果。</p>\n<h1 id=\"项目所用到的\"><a href=\"#项目所用到的\" class=\"headerlink\" title=\"项目所用到的\"></a>项目所用到的</h1><ul>\n<li>node.js </li>\n<li>socket.io</li>\n<li>HTML5 video API </li>\n<li>vue.js</li>\n</ul>\n<h1 id=\"如何使用：\"><a href=\"#如何使用：\" class=\"headerlink\" title=\"如何使用：\"></a>如何使用：</h1><p>本项目的核心是websocket，所以至少需要一台服务器提供websocket服务，websocket服务可以自己部署，可以使用第三方平台GoEasy提供的websocket服务(可免费使用两个月)。</p>\n<p>1、自己部署：websocket服务器可以是一台具有公网IP的云服务器，也可以是一台具有公网IP的普通PC，没有公网IP也可以。你也可以使用zerotier或其他VPN工具将两台设备组成一个大局域网，让它们能互相通信。websocket服务器操作系统不限，只要有node.js环境。</p>\n<p>websocket服务端部署方法：安装node.js环境，将server目录移动到服务器上，进入server目录，执行以下命令</p>\n<p>安装项目依赖包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装项目依赖包</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm install </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动websocket服务</span></span><br><span class=\"line\"></span><br><span class=\"line\">node index.js</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>2、使用GoEasy的websocket服务</p>\n<p>注册GoEasy开发者账号并创建一个应用，获得appkey，复制到本项目相应位置即可。</p>\n<p>GoEasy官网：<a href=\"https://www.goeasy.io/\">https://www.goeasy.io</a></p>\n<p>无论是使用哪种websocket服务都可以，本项目写了两套代码，只需将不用的那套注释掉即可(默认GoEasy)。</p>\n<p>除了websocket服务器之外，还需要两个http服务端，一个是web服务端(提供html、css、js等文件的访问)，一个是视频服务端(提供视频文件访问)。</p>\n<p>你可以将web服务部端署到以下位置：</p>\n<ul>\n<li>具有公网IP的服务器</li>\n<li>github-pages或国内的码云提供的静态web服务</li>\n<li>localhost(本地服务器)，同一个局域网内的设备访问该服务器内网IP</li>\n</ul>\n<p>视频文件只需一个视频地址就行，也有以下几种选择：</p>\n<ul>\n<li>具有公网IP的服务器</li>\n<li>localhost(本地服务器)，同一个局域网内的设备访问该服务器内网IP</li>\n<li>第三方视频地址</li>\n</ul>\n<p><img  src=\"https://s1.ax1x.com/2020/09/17/wfntdU.png\"  ><span class=\"image-caption\">wfntdU.png</span></p>\n<p>使用场景1：云服务器带宽足够大(至少要大于播放视频的码率)，云服务器既可以作为websocket服务端，也可以作为http服务端。上图中所有设备都访问云服务器的ip或域名。</p>\n<p>使用场景2：云服务器的带宽很小，这时候它只能作为websocket服务端，这时可以用上图中的PC1和PC2作为http服务端，PC1和PHONE1在一个内网访问PC1的内网IP，PC2和PHONE2在一个内网访问PC2的内网IP，PC3可作为自己的http服务端，PHONE3若是有提供视频文件的服务端，也可以使用。</p>\n<p><img  src=\"https://s1.ax1x.com/2020/09/17/wfnYZT.png\"  ><span class=\"image-caption\">wfnYZT.png</span></p>\n<p>使用场景3：需要使用zerotier或其他VPN工具将异地设备组成一个大局域网，其中任意一台PC均可作为websocket服务端和http服务端(需要上传带宽足够大)。上图中各设备都访问那台PC的内网ip即可。</p>\n<p>最简单的使用方法，下载nginx开启一个本地服务器，下载本项目client文件夹放到到nginx根目录里，视频文件也放到里面。注册goeasy开发者账号并创建一个应用，获得appkey，并填入到appkey到代码(<code>script/main.js</code>)相应位置。然后浏览器打开 <code>192.168.3.58/client/</code>，填入你的视频地址<code>192.168.3.58/movie/xxx.mp4</code>或网络视频地址，对方也这样操作一番，即可实现同步播放视频，不过这种方法只能白嫖两个月。</p>\n<p>web版本的功能比较简单，而且受限于网络问题，快进之类的操作需要缓冲一段时间。如果你不满足web版功能，对用户体验有更高的要求，如支持更多文件格式、播放高清本地视频文件、外挂字幕等，我也找到了另一种方式来满足你的需求。</p>\n<p>那就是DIY一个开源的播放器的源码：SPlayer(射手影音)。</p>\n<p>射手影音官网：<a href=\"https://splayer.org/\">https://splayer.org</a></p>\n<p>源码地址：<a href=\"https://github.com/chiflix/splayerx\">https://github.com/chiflix/splayerx</a></p>\n<p>在以<strong>electron + 播放器</strong>为关键字一番搜索之后，我找到了这个基于electron实现的开源播放器，并下载了源码来研究。</p>\n<p>经过一番研究之后，我找到了控制视频播放、暂停、快进的代码位置，并将控制同步的代码移植了进去，从而也实现了同步功能，并且与web版兼容。</p>\n<p>具体方法请看：<a href=\"https://github.com/liyang5945/sync-player/blob/master/how-to-modify-splayer.md\">修改教程</a></p>\n<p>本项目部分图标样式来源于此项目: <a href=\"https://github.com/Justineo/coplay\">coplay</a> </p>\n<p>本项目github地址：<a href=\"https://github.com/liyang5945/sync-player\">点击前往</a> ，欢迎⭐⭐⭐STAR⭐⭐⭐</p>\n","more":"<p>前段时间我有这样一个需求，想和一个异地的人一起看电影，先后在网上找了一些方案，不过那几个方案都有一些缺点</p>\n<ul>\n<li><p><strong>coplay</strong> 一个浏览器插件，只能播放各大视频网站的视频，视频资源有限，我想要看的视频没有，比如一些经典电影和美剧之类</p>\n</li>\n<li><p><strong>微光APP</strong> 还是上面的问题，而且只有手机端</p>\n</li>\n<li><p><strong>向日葵等远程桌面</strong> 受限于网络问题，卡顿很严重，体验不好</p>\n</li>\n</ul>\n<p>除了这几个方案之外我也尝试了直播的方案：</p>\n<ul>\n<li><p><strong>通过B站等直播平台进行直播，</strong> 缺点：有几十秒的延迟，而且不能保证两端播放进度同步，总会差个几秒，而且直播对上传带宽要求较高。</p>\n</li>\n<li><p><strong>自建直播平台，</strong>，我首先使用了腾讯云上的<code>云直播</code>解决方案，后来我又在自己的云服务器上使用<code>nginx+rtmp</code>搭建了直播服务，两个方案延迟差不多，大概在5-10秒，但还是无法解决两端视频不同步问题。</p>\n</li>\n</ul>\n<p>作为一个切图仔，对用户体验还是有一定追求的，我是一个下载党，看电影必须下载到本地看，基本不看视频网站上的玩意</p>\n<p>那么有没有能实现同步播放本地文件的方案呢，答案是肯定的，经过我的一些摸索和研究，我实现了本地文件的同步播放，同时支持PC和手机端，而且还支持外挂字幕等高级功能，如何实现请往下看。</p>\n<h1 id=\"功能介绍-amp-特性：\"><a href=\"#功能介绍-amp-特性：\" class=\"headerlink\" title=\"功能介绍&amp;特性：\"></a>功能介绍&amp;特性：</h1><p>一个可以同步看视频的播放器，可用于异地同步观影、观剧，支持多人同时观看。<br>本项目有两个版本，web版运行在浏览器上，可跨平台，不限操作系统、设备，功能简单适用于要求不高的用户。还有基于SPlayer(射手影音)DIY的客户端版本(windows、MAC)，播放4K高清文件、外挂字幕，统统没问题。</p>\n<h1 id=\"演示demo\"><a href=\"#演示demo\" class=\"headerlink\" title=\"演示demo:\"></a>演示demo:</h1><p>web版同步效果</p>\n<p><img  src=\"https://s1.ax1x.com/2020/09/19/wI60je.gif\"  ><span class=\"image-caption\">wI60je.gif</span></p>\n<p>客户端与web版同步效果</p>\n<p><img  src=\"https://s1.ax1x.com/2020/09/20/wofbYd.gif\"  ><span class=\"image-caption\">wofbYd.gif</span></p>\n<h1 id=\"原理：\"><a href=\"#原理：\" class=\"headerlink\" title=\"原理：\"></a>原理：</h1><p>基于websocket实现，与一些用websocket实现的聊天室类似，只不过这个聊天室里的消息换成了播放暂停的动作和时间信息，客户端收到消息后执行相应的动作:播放、暂停、快进，以达到同时播放的效果。</p>\n<h1 id=\"项目所用到的\"><a href=\"#项目所用到的\" class=\"headerlink\" title=\"项目所用到的\"></a>项目所用到的</h1><ul>\n<li>node.js </li>\n<li>socket.io</li>\n<li>HTML5 video API </li>\n<li>vue.js</li>\n</ul>\n<h1 id=\"如何使用：\"><a href=\"#如何使用：\" class=\"headerlink\" title=\"如何使用：\"></a>如何使用：</h1><p>本项目的核心是websocket，所以至少需要一台服务器提供websocket服务，websocket服务可以自己部署，可以使用第三方平台GoEasy提供的websocket服务(可免费使用两个月)。</p>\n<p>1、自己部署：websocket服务器可以是一台具有公网IP的云服务器，也可以是一台具有公网IP的普通PC，没有公网IP也可以。你也可以使用zerotier或其他VPN工具将两台设备组成一个大局域网，让它们能互相通信。websocket服务器操作系统不限，只要有node.js环境。</p>\n<p>websocket服务端部署方法：安装node.js环境，将server目录移动到服务器上，进入server目录，执行以下命令</p>\n<p>安装项目依赖包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装项目依赖包</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm install </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动websocket服务</span></span><br><span class=\"line\"></span><br><span class=\"line\">node index.js</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>2、使用GoEasy的websocket服务</p>\n<p>注册GoEasy开发者账号并创建一个应用，获得appkey，复制到本项目相应位置即可。</p>\n<p>GoEasy官网：<a href=\"https://www.goeasy.io/\">https://www.goeasy.io</a></p>\n<p>无论是使用哪种websocket服务都可以，本项目写了两套代码，只需将不用的那套注释掉即可(默认GoEasy)。</p>\n<p>除了websocket服务器之外，还需要两个http服务端，一个是web服务端(提供html、css、js等文件的访问)，一个是视频服务端(提供视频文件访问)。</p>\n<p>你可以将web服务部端署到以下位置：</p>\n<ul>\n<li>具有公网IP的服务器</li>\n<li>github-pages或国内的码云提供的静态web服务</li>\n<li>localhost(本地服务器)，同一个局域网内的设备访问该服务器内网IP</li>\n</ul>\n<p>视频文件只需一个视频地址就行，也有以下几种选择：</p>\n<ul>\n<li>具有公网IP的服务器</li>\n<li>localhost(本地服务器)，同一个局域网内的设备访问该服务器内网IP</li>\n<li>第三方视频地址</li>\n</ul>\n<p><img  src=\"https://s1.ax1x.com/2020/09/17/wfntdU.png\"  ><span class=\"image-caption\">wfntdU.png</span></p>\n<p>使用场景1：云服务器带宽足够大(至少要大于播放视频的码率)，云服务器既可以作为websocket服务端，也可以作为http服务端。上图中所有设备都访问云服务器的ip或域名。</p>\n<p>使用场景2：云服务器的带宽很小，这时候它只能作为websocket服务端，这时可以用上图中的PC1和PC2作为http服务端，PC1和PHONE1在一个内网访问PC1的内网IP，PC2和PHONE2在一个内网访问PC2的内网IP，PC3可作为自己的http服务端，PHONE3若是有提供视频文件的服务端，也可以使用。</p>\n<p><img  src=\"https://s1.ax1x.com/2020/09/17/wfnYZT.png\"  ><span class=\"image-caption\">wfnYZT.png</span></p>\n<p>使用场景3：需要使用zerotier或其他VPN工具将异地设备组成一个大局域网，其中任意一台PC均可作为websocket服务端和http服务端(需要上传带宽足够大)。上图中各设备都访问那台PC的内网ip即可。</p>\n<p>最简单的使用方法，下载nginx开启一个本地服务器，下载本项目client文件夹放到到nginx根目录里，视频文件也放到里面。注册goeasy开发者账号并创建一个应用，获得appkey，并填入到appkey到代码(<code>script/main.js</code>)相应位置。然后浏览器打开 <code>192.168.3.58/client/</code>，填入你的视频地址<code>192.168.3.58/movie/xxx.mp4</code>或网络视频地址，对方也这样操作一番，即可实现同步播放视频，不过这种方法只能白嫖两个月。</p>\n<p>web版本的功能比较简单，而且受限于网络问题，快进之类的操作需要缓冲一段时间。如果你不满足web版功能，对用户体验有更高的要求，如支持更多文件格式、播放高清本地视频文件、外挂字幕等，我也找到了另一种方式来满足你的需求。</p>\n<p>那就是DIY一个开源的播放器的源码：SPlayer(射手影音)。</p>\n<p>射手影音官网：<a href=\"https://splayer.org/\">https://splayer.org</a></p>\n<p>源码地址：<a href=\"https://github.com/chiflix/splayerx\">https://github.com/chiflix/splayerx</a></p>\n<p>在以<strong>electron + 播放器</strong>为关键字一番搜索之后，我找到了这个基于electron实现的开源播放器，并下载了源码来研究。</p>\n<p>经过一番研究之后，我找到了控制视频播放、暂停、快进的代码位置，并将控制同步的代码移植了进去，从而也实现了同步功能，并且与web版兼容。</p>\n<p>具体方法请看：<a href=\"https://github.com/liyang5945/sync-player/blob/master/how-to-modify-splayer.md\">修改教程</a></p>\n<p>本项目部分图标样式来源于此项目: <a href=\"https://github.com/Justineo/coplay\">coplay</a> </p>\n<p>本项目github地址：<a href=\"https://github.com/liyang5945/sync-player\">点击前往</a> ，欢迎⭐⭐⭐STAR⭐⭐⭐</p>\n","categories":[{"name":"技术分享","path":"api/categories/技术分享.json"}],"tags":[{"name":"websocket","path":"api/tags/websocket.json"}]}